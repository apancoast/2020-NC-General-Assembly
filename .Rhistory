links <- links %>% bind_cols(., pages)
links <- links %>%
mutate(page = paste0(links, "&page=", page_num))
links <- tibble(print(test$links))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages)
links <- tibble(print(test$links))
links <- tibble(print(test$links,"&page="))
links <- tibble(paste0(test$links,"&page="))
links <- tibble(paste0(test$links,"&page="))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages)
View(links)
links <- links %>%
mutate(page = paste0(links, page_num))
View(links)
links <- links %>%
unite(page, c(links, page_num))
links <- tibble(paste0(test$links,"&page="))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages)
links <- links %>%
unite(page, c(links, page_num))
links <- tibble(paste0(test$links,"&page="))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages)
links <- links %>%
unite(page, c("links", "page_num"))
View(links)
links <- tibble(paste0(test$links,"&page="))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages) %>% rename(links = 1)
links <- links %>%
unite(page, c(links, page_num))
View(links)
links <- links %>%
unite(page, c(links, page_num), sep ="")
links <- tibble(paste0(test$links,"&page="))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages) %>% rename(links = 1)
links <- links %>%
unite(page, c(links, page_num), sep ="")
View(links)
links <- tibble(paste0(test$links,"&page="))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages) %>% rename(links = 1)
links <- links %>%
unite(page, c(links, page_num), sep ="")
links <- read_html(links)
links %>%
html_table()
links <- tibble(paste0(test$links,"&page="))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages) %>% rename(links = 1)
links <- links %>%
unite(page, c(links, page_num), sep ="")
links %>%
html_table()
links <- tibble(paste0(test$links,"&page="))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages) %>% rename(links = 1)
links <- links %>%
unite(page, c(links, page_num), sep ="")
links %>%
read_html(links) %>%
html_table()
get_tables = function(links) {
links <- read_html(links)
links <- tibble(paste0(test$links,"&page="))
pages <- tibble(page_num = 1:88)
links <- links %>% bind_cols(., pages) %>% rename(links = 1)
links <- links %>%
unite(page, c(links, page_num), sep ="")
links %>%
html_table()
}
test2 <- test %>%
mutate(tables = map(links, get_tables))
?mget()
links <- "https://www.transparencyusa.org/nc/candidate/michael-lee/donors?cycle=2020-election-cycle&by=donorTypeCode"
links <- mget(paste0(links, "&page="))
View(congress)
test2 <- paste0(test, "&page=", 1:88)
test2 <- tibble(paste0(test, "&page=", 1:88))
View(test2)
test2 <- tibble(paste0(test$links,"&page="))
View(test2)
test2 <- paste0(test$links,"&page=")
congress %>%
mutate(links = paste0(links, "&page="))
congress %>%
mutate(links = paste0(links, "&page=", 1:88))
congress %>%
mutate(links = paste0(links, "&page="))
pluginurl <- "https://wordpress.org/support/plugin/wp-fastest-cache/"
# we create and empty dataframe to receive the data that will be retrieved from each pagination. If you don't know what's a data frame think of them as excel file
all_reviews <- data.frame()
#####   beginning of the LOOP ####
# if copy past stuff, don't forget to grab the code until the end of the loop at least
for(i in 1:49) {
# sending to console the loop status
# paste0() function is just a concatenation function with a weird name
message(paste0("Page ",i))
}
read_html(paste0(test$links,"&page=",i))
message(paste0(test$links,"&page=",i))
View(test)
for (i in 1:10) {
message(paste0(test$links,"&page=",i))
}
tibble(paste0(test$links,"&page=",i))
tibble(message(paste0(test$links,"&page=",i)))
message(paste0(test$links,"&page=",i)))
message(paste0(test$links,"&page=",i))
for (i in 1:10) {
message(paste0(test$links,"&page=",i))
}
for (i in 1:10) {
tibble(paste0(test$links,"&page=",i))
}
test2<- for (i in 1:10) {
tibble(paste0(test$links,"&page=",i))
}
test2 <- for (i in 1:10) {
message(paste0(test$links,"&page=",i))
}
test2 <- for (i in 1:10) {
message(paste0(test$links,"&page=",i))
}
test2 <- for (i in 1:10) {
paste0(test$links,"&page=",i)
}
test2 <- for (i in 1:10) {
mutate(links = paste0(test$links,"&page=",i))
}
test2 <- for (i in 1:10) {
test %>% mutate(links = paste0(links,"&page=",i))
}
for (i in 1:10) {
test2 <- test %>% mutate(links = paste0(links,"&page=",i))
}
View(test2)
test %>%
mutate(links = paste0(links, "&page="))
test2 <- test %>%
mutate(links = paste0(links, "&page="))
test <- test %>%
mutate(links = paste0(links, "&page="))
View(congress)
congress <- congress %>%
mutate(links = paste0(links, "&page="))
#Going to save this df here so I don't always have to wait for the webscrapping when I reopen project
write_csv(congress, "congress.csv")
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
#  extract <- bind_rows(lapply(xml_attrs(reviews), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
}
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
extract <- bind_rows(lapply(xml_attrs(tables), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
}
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
#extract <- bind_rows(lapply(xml_attrs(tables), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
}
View(tables)
tables[[1]]
?xml_attrs()
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
extract <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
}
View(extract)
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
extract{{i}} <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
}
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
extract,i <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
}
output <- mtcars[NULL,]
View(output)
output <- extract[null,]
output <- extract[NULL,]
output <- extract[NULL,]
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
extract <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- extract[null,]
output <- rbind(output, extract[i,])
}
output <- extract[NULL,]
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
extract <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- rbind(output, extract[i,])
}
View(output)
output <- extract[NULL,]
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
extract <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- rbind(output, extract[i,])
}
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
extract <- bind_rows(lapply(tables[i,], function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
#output <- rbind(output, extract[i,])
}
output <- tibble()
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
output <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
#output <- rbind(output, extract[i,])
}
links <- read_html(paste0(test$links,i))
View(links)
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
View(tables)
View(test)
View(output)
output <- tibble()
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
#output <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- rbind(output, tables)
}
output <- tibble()
for (i in 1:10) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
#output <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
View(output)
output <- tibble()
for (i in 1:88) {
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
#output <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
output <- tibble()
for (i in 1:88) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
#output <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
View(output)
View(output)
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links) %>% mutate(links = test$links)
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
#output <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links) %>% html_nodes(".profile-title")
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
#output <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links) %>% html_nodes(".profile-title")
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
output <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
# output <- bind_rows(output, tables)
}
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
output <- bind_rows(lapply(xml_attrs(tables), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links) %>% html_nodes(".profile-title")
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
output <- bind_rows(lapply(xml_attrs(tables), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
# output <- bind_rows(output, tables)
}
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
tables <- tables %>% mutate(candidate= html_nodes(".profile-title"))
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
# output <- bind_rows(lapply(xml_attrs(tables), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
links %>%
html_nodes(".page-link") %>%
html_text()
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
tables <- tables %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
# output <- bind_rows(lapply(xml_attrs(tables), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
tables <- tables %>% unnest() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
# output <- bind_rows(lapply(xml_attrs(tables), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
# output <- bind_rows(lapply(xml_attrs(tables), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(xml_attrs(tables), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
output <- tibble()
for (i in 1:5) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
output <- bind_rows(output, tables)
}
View(output)
for (i in 1:1) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
#  output <- bind_rows(output, tables)
}
View(tables)
for (i in 1:1) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
%>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
#  output <- bind_rows(output, tables)
}
for (i in 1:1) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
tables <- tables %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
#  output <- bind_rows(output, tables)
}
for (i in 1:1) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
tables <- tables %>% html_nodes(".profile-title") %>% html_text()
#  output <- bind_rows(output, tables)
}
for (i in 1:1) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
tables <- html_nodes(".profile-title") %>% html_text()
#  output <- bind_rows(output, tables)
}
links %>% html_nodes(".profile-title") %>% html_text()
for (i in 1:1) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
testy <- links %>% html_nodes(".profile-title") %>% html_text()
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)), testy)
#  output <- bind_rows(output, tables)
}
View(tables)
for (i in 1:1) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
testy <- links %>% html_nodes(".profile-title") %>% html_text()
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
#  output <- bind_rows(output, tables)
}
testy <- as.character(links %>% html_nodes(".profile-title") %>% html_text())
for (i in 1:1) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
testy <- as.character(links %>% html_nodes(".profile-title") %>% html_text())
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
#  output <- bind_rows(output, tables)
}
View(tables)
for (i in 1:1) {
message(paste0("Page ",i))
links <- read_html(paste0(test$links,i))
tables <- html_table(links)
# tables <- tables %>% as_tibble() %>% mutate(candidate= html_nodes(".profile-title") %>%  html_text())
# Then we are getting every htmml attributes values into columns and rows
# it's a copy/past from stackoverflow, it's works don't ask me how.
tables <- bind_rows(lapply(tables, function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
tables <- tables %>% mutate(candidates = as.character(links %>% html_nodes(".profile-title") %>% html_text()))
#  output <- bind_rows(output, tables)
}
View(tables)
